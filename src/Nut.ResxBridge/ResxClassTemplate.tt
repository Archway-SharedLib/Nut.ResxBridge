<#@ template debug="false" hostspecific="false" language="C#" linePragmas="false" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
/// <auto-generated>
/// This code was generated by Nut.ResxBridge.
/// </auto-generated>

using System;
using System.Resources;
using System.Runtime.CompilerServices;
using System.CodeDom.Compiler;

namespace <#= this.Model.NamespaceName #>
{
    [CompilerGenerated]
    [GeneratedCode("Nut.ResxBridge", "<#= this.Model.Version #>")]
    <#= this.Model.ClassModifer #> static partial class <#= this.Model.ClassName #>
    {
        private static ResourceManager resourceManager = new ResourceManager(typeof(<#= this.Model.NamespaceName #>.<#= this.Model.ClassName #>));

        private static string GetResourceString(string resourceKey, string defaultString = null)
        {
            string resourceString = null;
            try
            {
                resourceString = resourceManager.GetString(resourceKey);
            }
            catch (MissingManifestResourceException) { }

            if (defaultString != null && resourceKey.Equals(resourceString))
            {
                return defaultString;
            }

            return resourceString;
        }

        private static string Format(string resourceFormat, params object[] args)
        {
            if (args != null)
            {
                return string.Format(resourceFormat, args);
            }

            return resourceFormat;
        }

<# foreach(var member in this.Model.Members) { #>
        /// <summary>
        /// <#= this.EscXmlStr(Strings.XmlDocCommentSumary(member.Value)) #>
        /// </summary>
<# if(member.IsMethod) { #>
        public static string <#= member.MemberName #>(<#=this.ArgsStr(member, "object")#>)
             => Format(GetResourceString(@"<#= this.EscStr(member.Key) #>", @"<#= this.EscStr(member.Value) #>"), 
                 <#=this.ArgsStr(member)#>);
<# } else { #>
        public static string <#= member.MemberName #> => GetResourceString(@"<#= this.EscStr(member.Key) #>", @"<#= this.EscStr(member.Value) #>");
<# } #>

<# } #>
    }
}